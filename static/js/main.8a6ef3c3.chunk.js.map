{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","components/Items/Items.tsx","components/PageInfo/PageInfo.tsx","components/PageSelector/PageSelector.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pageCount","Math","ceil","pageButtons","isFirstPage","isLastPage","className","cn","disabled","href","onClick","map","page","active","handlePageChangeIfDifferent","Items","preparedItems","item","PageInfo","firstItem","lastItem","items","length","PageSelector","handlePageSelect","id","value","onChange","event","target","htmlFor","App","useState","setCurrentPage","setPerPage","slice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8a6ef3c3.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (value: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pageCount = Math.ceil(total / perPage);\n  const pageButtons = getNumbers(1, pageCount);\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === pageCount;\n\n  const handlePrevButton = () => {\n    if (!isFirstPage) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleNextButton = () => {\n    if (!isLastPage) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const handlePageChangeIfDifferent = (page: number) => {\n    if (currentPage !== page) {\n      onPageChange(page);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', {\n        disabled: isFirstPage,\n      })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPage}\n          onClick={handlePrevButton}\n        >\n          «\n        </a>\n      </li>\n\n      {pageButtons.map(page => (\n        <li\n          key={page}\n          className={cn('page-item', {\n            active: page === currentPage,\n          })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            aria-disabled={isFirstPage}\n            onClick={() => handlePageChangeIfDifferent(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={cn('page-item', {\n        disabled: isLastPage,\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage}\n          onClick={handleNextButton}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","type Props = {\n  preparedItems: string [];\n};\n\nexport const Items: React.FC<Props> = ({ preparedItems }) => {\n  return (\n    <ul>\n      {preparedItems.map(item => (\n        <li data-cy=\"item\" key={item}>\n          {item}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","type Props = {\n  currentPage: number;\n  firstItem: number;\n  lastItem: number;\n  items: string[]\n};\n\nexport const PageInfo: React.FC<Props> = ({\n  currentPage,\n  firstItem,\n  lastItem,\n  items,\n}) => {\n  return (\n    <p className=\"lead\" data-cy=\"info\">\n      {`Page ${currentPage} (items ${firstItem + 1} - ${lastItem} of ${items.length})`}\n    </p>\n  );\n};\n","type Props = {\n  perPage: number;\n  handlePageSelect: (value: number) => void;\n};\n\nexport const PageSelector: React.FC<Props> = ({\n  perPage,\n  handlePageSelect,\n}) => {\n  return (\n    <div className=\"form-group row\">\n      <div className=\"col-3 col-sm-2 col-xl-1\">\n        <select\n          data-cy=\"perPageSelector\"\n          id=\"perPageSelector\"\n          className=\"form-control\"\n          value={perPage}\n          onChange={(event) => handlePageSelect(+event.target.value)}\n        >\n          <option value=\"3\">3</option>\n          <option value=\"5\">5</option>\n          <option value=\"10\">10</option>\n          <option value=\"20\">20</option>\n        </select>\n      </div>\n\n      <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n        items per page\n      </label>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\nimport { Items } from './components/Items/Items';\nimport { PageInfo } from './components/PageInfo/PageInfo';\nimport { PageSelector } from './components/PageSelector/PageSelector';\n\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const firstItem = (currentPage - 1) * perPage;\n  const lastItem = currentPage * perPage < items.length\n    ? currentPage * perPage\n    : items.length;\n\n  const handlePageSelect = (value: number) => {\n    setPerPage(value);\n    setCurrentPage(1);\n  };\n\n  const preparedItems = items.slice(firstItem, lastItem);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <PageInfo\n        currentPage={currentPage}\n        firstItem={firstItem}\n        lastItem={lastItem}\n        items={items}\n      />\n\n      <PageSelector\n        perPage={perPage}\n        handlePageSelect={handlePageSelect}\n      />\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <Items preparedItems={preparedItems} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}